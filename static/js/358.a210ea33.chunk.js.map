{"version":3,"file":"static/js/358.a210ea33.chunk.js","mappings":"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","sources":["app/components/sideBar.component.tsx","app/components/gridContentContainer.component.tsx","app/components/calendar.component.tsx","app/layout/index.tsx","app/layout/store/date.selectors.ts","theme/mainTheme.actions.ts"],"sourcesContent":["import * as React from \"react\";\r\n\r\n// ===================== mui =====================\r\nimport { styled, Theme, CSSObject } from \"@mui/material/styles\";\r\nimport MuiDrawer, { DrawerProps } from \"@mui/material/Drawer\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { primaryMain } from \"../../theme/mainTheme.actions\";\r\nimport theme from \"../../theme/mainTheme\";\r\n\r\n// ====== interfaces ======\r\ninterface IDrawerProps extends DrawerProps {\r\n  openedSideBarWidth: number;\r\n  closedSideBarWidth: number;\r\n}\r\n\r\ninterface ISideBarProps {\r\n  isSideBarOpen: boolean;\r\n  openedSideBarWidth: number;\r\n  closedSideBarWidth: number;\r\n  setIsSideBarOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\n// ====== mixins ======\r\nconst openedMixin = (theme: Theme, sideBarWidth: number): CSSObject => ({\r\n  width: sideBarWidth,\r\n  transition: theme.transitions.create(\"width\", {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.enteringScreen,\r\n  }),\r\n  overflowX: \"hidden\",\r\n});\r\n\r\nconst closedMixin = (theme: Theme, sideBarWidth: number): CSSObject => ({\r\n  transition: theme.transitions.create(\"width\", {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  overflowX: \"hidden\",\r\n  width: sideBarWidth,\r\n});\r\n\r\n// ====== styled ======\r\nconst DrawerHeader = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"flex-end\",\r\n  height: \"60px\",\r\n  padding: theme.spacing(0, 1),\r\n  ...theme.mixins.toolbar,\r\n}));\r\n\r\nconst Drawer = styled(MuiDrawer, {\r\n  shouldForwardProp: (prop) => {\r\n    switch (prop) {\r\n      case \"isSideBarOpen\":\r\n      case \"openedSideBarWidth\":\r\n      case \"closedSideBarWidth\":\r\n        return false;\r\n      default:\r\n        return true;\r\n    }\r\n  },\r\n})<IDrawerProps>(({ theme, open, openedSideBarWidth, closedSideBarWidth }) => ({\r\n  color: \"white\",\r\n  flexShrink: 0,\r\n  whiteSpace: \"nowrap\",\r\n  boxSizing: \"border-box\",\r\n  ...(open && {\r\n    ...openedMixin(theme, openedSideBarWidth),\r\n    \"& .MuiDrawer-paper\": openedMixin(theme, openedSideBarWidth),\r\n  }),\r\n  ...(!open && {\r\n    ...closedMixin(theme, closedSideBarWidth),\r\n    \"& .MuiDrawer-paper\": closedMixin(theme, closedSideBarWidth),\r\n  }),\r\n}));\r\n\r\nconst SideBar = ({\r\n  isSideBarOpen,\r\n  openedSideBarWidth,\r\n  closedSideBarWidth,\r\n  setIsSideBarOpen,\r\n  children,\r\n}: React.PropsWithChildren<ISideBarProps>) => {\r\n  const handleSideBarOpen = () => {\r\n    setIsSideBarOpen(true);\r\n  };\r\n  const handleSideBarClose = () => {\r\n    setIsSideBarOpen(false);\r\n  };\r\n\r\n  const MyDrawerHeader = () => {\r\n    return (\r\n      <DrawerHeader>\r\n        {isSideBarOpen ? (\r\n          <IconButton onClick={handleSideBarClose}>\r\n            <ChevronLeftIcon htmlColor={primaryMain({ theme })} />\r\n          </IconButton>\r\n        ) : (\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleSideBarOpen}\r\n            edge=\"start\"\r\n          >\r\n            <MenuIcon htmlColor={primaryMain({ theme })} />\r\n          </IconButton>\r\n        )}\r\n      </DrawerHeader>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      open={isSideBarOpen}\r\n      openedSideBarWidth={openedSideBarWidth}\r\n      closedSideBarWidth={closedSideBarWidth}\r\n    >\r\n      <MyDrawerHeader />\r\n      {children}\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","// ===================== mui =====================\r\nimport Grid, { GridProps } from \"@mui/material/Grid\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\n// ====== interfaces ======\r\ninterface ICustomGridContainerProps extends GridProps {\r\n  isSideBarOpen?: boolean;\r\n  openedSideBarWidth?: number;\r\n  closedSideBarWidth?: number;\r\n}\r\n\r\n// ====== styled ======\r\nlet CustomGridContainer = styled(Grid, {\r\n  shouldForwardProp: (prop) => {\r\n    switch (prop) {\r\n      case \"isSideBarOpen\":\r\n      case \"openedSideBarWidth\":\r\n      case \"closedSideBarWidth\":\r\n        return false;\r\n      default:\r\n        return true;\r\n    }\r\n  },\r\n})<ICustomGridContainerProps>(\r\n  ({ theme, isSideBarOpen, openedSideBarWidth, closedSideBarWidth }) => ({\r\n    marginLeft: closedSideBarWidth,\r\n    width: `calc(100% - ${closedSideBarWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    ...(isSideBarOpen && {\r\n      marginLeft: openedSideBarWidth,\r\n      width: `calc(100% - ${openedSideBarWidth}px)`,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    }),\r\n  })\r\n);\r\n\r\nCustomGridContainer = styled(CustomGridContainer)`\r\n  position: relative;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-flow: column;\r\n  justify-content: space-between;\r\n  flex-grow: 1;\r\n\r\n  & > .MuiGrid-container {\r\n    flex-grow: 1;\r\n  }\r\n`;\r\n\r\nconst GridContentContainer = (props: ICustomGridContainerProps) => {\r\n  return <CustomGridContainer {...props} />;\r\n};\r\n\r\nexport default GridContentContainer;\r\n","// ===================== mui =====================\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport { DateCalendar } from \"@mui/x-date-pickers/DateCalendar\";\r\n\r\n// ===================== dayjs =====================\r\nimport dayjs, { Dayjs } from \"dayjs\";\r\n\r\nconst CalendarComponent = ({\r\n  chosenDate,\r\n  handleChooseDate,\r\n}: {\r\n  chosenDate: string;\r\n  handleChooseDate: (date: Dayjs | null) => void;\r\n}) => {\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n      <DateCalendar\r\n        value={dayjs(chosenDate)}\r\n        onChange={(newValue: Dayjs | null) => handleChooseDate(newValue)}\r\n      />\r\n    </LocalizationProvider>\r\n  );\r\n};\r\n\r\nexport default CalendarComponent;\r\n","import { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { Outlet, useNavigate } from \"react-router-dom\";\r\n\r\n// ===================== mui =====================\r\nimport { AppBar, Grid, Typography, IconButton } from \"@mui/material\";\r\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\r\nimport LogoutIcon from \"@mui/icons-material/Logout\";\r\n\r\n// ===================== dayjs =====================\r\nimport dayjs, { Dayjs } from \"dayjs\";\r\n\r\n// ===================== store =====================\r\nimport { useAppDispatch, useAppSelector } from \"../../store\";\r\nimport { setDate } from \"./store/date.slice\";\r\nimport { dateSelector } from \"./store/date.selectors\";\r\nimport { fetchWeatherForecast } from \"../forecast/store/forecast.actions\";\r\n\r\n// ===================== components =====================\r\nimport SideBar from \"../components/sideBar.component\";\r\nimport GridContentContainer from \"../components/gridContentContainer.component\";\r\nimport CalendarComponent from \"../components/calendar.component\";\r\n\r\n// ===================== types =====================\r\nimport { IApiWeaterGetProps } from \"../../types/api.types\";\r\n\r\nconst Layout = () => {\r\n  // ====== selectors ======\r\n  const chosenDate = useAppSelector(dateSelector);\r\n\r\n  // ====== hooks ======\r\n  const [isSideBarOpen, setIsSideBarOpen] = useState<boolean>(true);\r\n  const dispatch = useAppDispatch();\r\n  const navigate = useNavigate();\r\n  const isInitialLoading = useRef<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    if (!isInitialLoading.current) return;\r\n\r\n    if (!chosenDate) dispatch(setDate(dayjs().format(\"YYYY-MM-DD\")));\r\n\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      const props: IApiWeaterGetProps = {\r\n        latitude: position.coords.latitude,\r\n        longitude: position.coords.longitude,\r\n      };\r\n      dispatch(fetchWeatherForecast(props));\r\n    });\r\n\r\n    isInitialLoading.current = false;\r\n  }, []);\r\n\r\n  const openedSideBarWidth = 350;\r\n  const closedSideBarWidth = 50;\r\n\r\n  // ====== handlers ======\r\n  const handleChooseDate = useCallback(\r\n    (date: Dayjs | null): void => {\r\n      if (date) {\r\n        dispatch(setDate(date.format(\"YYYY-MM-DD\")));\r\n        navigate(`/training-list/${date.format(\"YYYY-MM-DD\")}`);\r\n      }\r\n    },\r\n    [dispatch, navigate]\r\n  );\r\n\r\n  const handleLogout = () => {\r\n    window.localStorage.removeItem(\"token\");\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <Grid container sx={{ flexGrow: 1 }} component=\"main\">\r\n      <SideBar\r\n        isSideBarOpen={isSideBarOpen}\r\n        openedSideBarWidth={openedSideBarWidth}\r\n        closedSideBarWidth={closedSideBarWidth}\r\n        setIsSideBarOpen={setIsSideBarOpen}\r\n      >\r\n        {isSideBarOpen ? (\r\n          <CalendarComponent\r\n            chosenDate={chosenDate}\r\n            handleChooseDate={handleChooseDate}\r\n          />\r\n        ) : null}\r\n      </SideBar>\r\n      <GridContentContainer\r\n        item\r\n        isSideBarOpen={isSideBarOpen}\r\n        openedSideBarWidth={openedSideBarWidth}\r\n        closedSideBarWidth={closedSideBarWidth}\r\n      >\r\n        <AppBar\r\n          color=\"primary\"\r\n          position=\"sticky\"\r\n          component=\"header\"\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-evenly\",\r\n            alignItems: \"center\",\r\n            height: \"65px\",\r\n          }}\r\n        >\r\n          <Typography\r\n            variant=\"h4\"\r\n            component=\"h1\"\r\n            sx={{ display: \"flex\", flexGrow: 1, justifyContent: \"center\" }}\r\n          >\r\n            Sport Calendar\r\n          </Typography>\r\n          <IconButton\r\n            onClick={() => navigate(\"/profile\")}\r\n            sx={{ mr: 2, color: \"white\" }}\r\n          >\r\n            <AccountCircleIcon fontSize=\"large\" />\r\n          </IconButton>\r\n          <IconButton onClick={handleLogout} sx={{ mr: 6, color: \"white\" }}>\r\n            <LogoutIcon fontSize=\"large\" />\r\n          </IconButton>\r\n        </AppBar>\r\n        <Grid\r\n          container\r\n          spacing={1}\r\n          sx={{\r\n            flexGrow: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Outlet />\r\n        </Grid>\r\n      </GridContentContainer>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { RootState } from \"../../../store\";\r\n\r\nexport const dateSelector = (state: RootState) => state.date.chosenDate;\r\n","import { ITheme } from \"./mainTheme\";\r\n\r\n// breakpoints\r\nexport const downMd = ({ theme }: ITheme) => theme.breakpoints.down(\"md\");\r\n\r\n// colors\r\nexport const primaryMain = ({ theme }: ITheme) => theme.palette.primary.main;\r\nexport const primaryLight = ({ theme }: ITheme) => theme.palette.primary.light;\r\nexport const primaryText = ({ theme }: ITheme) => theme.palette.primary.text;\r\nexport const primaryBackground = ({ theme }: ITheme) =>\r\n  theme.palette.primary.backgroundColor;\r\nexport const secondaryMain = ({ theme }: ITheme) =>\r\n  theme.palette.secondary.main;\r\nexport const errorMain = ({ theme }: ITheme) => theme.palette.error.main;\r\nexport const secondaryText = ({ theme }: ITheme) =>\r\n  theme.palette.secondary.text;\r\nexport const successLight = ({ theme }: ITheme) => theme.palette.success.light;\r\n"],"names":["openedMixin","theme","sideBarWidth","width","transition","transitions","create","easing","sharp","duration","enteringScreen","overflowX","closedMixin","leavingScreen","DrawerHeader","styled","_ref","_objectSpread","display","alignItems","justifyContent","height","padding","spacing","mixins","toolbar","Drawer","MuiDrawer","shouldForwardProp","prop","_ref2","open","openedSideBarWidth","closedSideBarWidth","color","flexShrink","whiteSpace","boxSizing","_ref3","isSideBarOpen","setIsSideBarOpen","children","handleSideBarOpen","handleSideBarClose","MyDrawerHeader","_jsx","IconButton","onClick","ChevronLeftIcon","htmlColor","primaryMain","edge","MenuIcon","_jsxs","variant","CustomGridContainer","Grid","marginLeft","concat","_templateObject","_taggedTemplateLiteral","props","chosenDate","handleChooseDate","LocalizationProvider","dateAdapter","AdapterDayjs","DateCalendar","value","dayjs","onChange","newValue","useAppSelector","dateSelector","_useState","useState","_useState2","_slicedToArray","dispatch","useAppDispatch","navigate","useNavigate","isInitialLoading","useRef","useEffect","current","setDate","format","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","fetchWeatherForecast","useCallback","date","container","sx","flexGrow","component","SideBar","CalendarComponent","GridContentContainer","item","AppBar","flexDirection","Typography","mr","AccountCircleIcon","fontSize","window","localStorage","removeItem","LogoutIcon","Outlet","state","palette","primary","main","primaryLight","light","primaryBackground","_ref5","backgroundColor","errorMain","_ref7","error"],"sourceRoot":""}