{"version":3,"file":"static/js/378.2bb88c1b.chunk.js","mappings":"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","sources":["app/exercise/store/exercise.selectors.ts","app/components/chartPie.component.tsx","app/profile/index.tsx","app/training/store/training.selectors.ts","theme/mainTheme.actions.ts"],"sourcesContent":["import { RootState } from \"../../../store\";\r\n\r\nexport const exerciseListSelector = (state: RootState) =>\r\n  state.exercise.exerciseList;\r\n\r\nexport const chosenExerciseSelector = (state: RootState) =>\r\n  state.exercise.chosenExercise;\r\n\r\nexport const nextExerciseIdSelector = (state: RootState) =>\r\n  state.exercise.nextId;\r\n\r\nexport const trainingExerciseListSelector = (state: RootState) =>\r\n  state.exercise.trainingExerciseList;\r\n","// ===================== mui =====================\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport { primaryLight, errorMain } from \"../../theme/mainTheme.actions\";\r\nimport theme from \"../../theme/mainTheme\";\r\n\r\n// ===================== types =====================\r\nimport { ActivityStatus } from \"../../types/activityStatus.enum\";\r\n\r\n// ===================== chart.js =====================\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\r\nimport { Pie } from \"react-chartjs-2\";\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst ChartPie = ({\r\n  label,\r\n  propsData,\r\n}: {\r\n  label: string;\r\n  propsData: [number, number, number];\r\n}) => {\r\n  const data = {\r\n    labels: [\r\n      ActivityStatus.toDo,\r\n      ActivityStatus.inProgress,\r\n      ActivityStatus.done,\r\n    ],\r\n    datasets: [\r\n      {\r\n        label: label,\r\n        data: propsData,\r\n        backgroundColor: [\r\n          errorMain({ theme }),\r\n          \"yellow\",\r\n          primaryLight({ theme }),\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Box width={300} height={400} p={3} m={5}>\r\n      <Typography variant=\"h6\" pb={2}>\r\n        {label}\r\n      </Typography>\r\n      <Pie data={data} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ChartPie;\r\n","import { useEffect, useMemo, useRef, useState } from \"react\";\r\n\r\n// ===================== mui =====================\r\nimport { Card, TextField, Typography } from \"@mui/material\";\r\n\r\n// ===================== store =====================\r\nimport { useAppDispatch, useAppSelector } from \"../../store\";\r\nimport { exerciseListSelector } from \"../exercise/store/exercise.selectors\";\r\nimport { trainingListSelector } from \"../training/store/training.selectors\";\r\n\r\n// ===================== types =====================\r\nimport { ILoginForm } from \"../../types/login.types\";\r\nimport { ActivityStatus } from \"../../types/activityStatus.enum\";\r\nimport ChartPie from \"../components/chartPie.component\";\r\nimport { getAllTraining } from \"../training/store/training.slice\";\r\nimport { getAllExercise } from \"../exercise/store/exercise.slice\";\r\n\r\nconst ProfilePage = () => {\r\n  // ====== selectors ======\r\n  const exerciseList = useAppSelector(exerciseListSelector);\r\n  const trainingList = useAppSelector(trainingListSelector);\r\n\r\n  // ====== hooks ======\r\n  const dispatch = useAppDispatch();\r\n  const isInitialLoading = useRef<boolean>(true);\r\n  const [currentUser, setCurrentUser] = useState<ILoginForm | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!isInitialLoading.current) return;\r\n    dispatch(getAllTraining());\r\n    dispatch(getAllExercise());\r\n\r\n    const userFromLS = window.localStorage.getItem(\"user\");\r\n    if (!userFromLS) return;\r\n    setCurrentUser(JSON.parse(userFromLS) as ILoginForm);\r\n    isInitialLoading.current = false;\r\n  }, []);\r\n\r\n  // ===== data =====\r\n  const { toDoExercise, inProgressExercise, doneExercise } = useMemo(() => {\r\n    const result = {\r\n      toDoExercise: 0,\r\n      inProgressExercise: 0,\r\n      doneExercise: 0,\r\n    };\r\n    if (!exerciseList) return result;\r\n\r\n    exerciseList.forEach((exercise) => {\r\n      switch (exercise.status) {\r\n        case ActivityStatus.toDo:\r\n          result.toDoExercise++;\r\n          break;\r\n        case ActivityStatus.inProgress:\r\n          result.inProgressExercise++;\r\n          break;\r\n        case ActivityStatus.done:\r\n          result.doneExercise++;\r\n          break;\r\n      }\r\n    });\r\n    return result;\r\n  }, [exerciseList]);\r\n\r\n  const { toDoTraining, inProgressTraining, doneTraining } = useMemo(() => {\r\n    const result = {\r\n      toDoTraining: 0,\r\n      inProgressTraining: 0,\r\n      doneTraining: 0,\r\n    };\r\n    if (!trainingList) return result;\r\n\r\n    trainingList.forEach((training) => {\r\n      switch (training.status) {\r\n        case ActivityStatus.toDo:\r\n          result.toDoTraining++;\r\n          break;\r\n        case ActivityStatus.inProgress:\r\n          result.inProgressTraining++;\r\n          break;\r\n        case ActivityStatus.done:\r\n          result.doneTraining++;\r\n          break;\r\n      }\r\n    });\r\n    return result;\r\n  }, [trainingList]);\r\n\r\n  // ===== render =====\r\n  const renderTextField = (label: string, value: string) => (\r\n    <TextField\r\n      sx={{\r\n        width: \"100%\",\r\n        mb: 2,\r\n      }}\r\n      key={label}\r\n      label={label}\r\n      size=\"small\"\r\n      variant=\"outlined\"\r\n      value={value}\r\n      disabled\r\n    />\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {toDoTraining || inProgressTraining || doneTraining ? (\r\n        <ChartPie\r\n          label=\"Training\"\r\n          propsData={[toDoTraining, inProgressTraining, doneTraining]}\r\n        />\r\n      ) : null}\r\n      {toDoExercise || inProgressExercise || doneExercise ? (\r\n        <ChartPie\r\n          label=\"Exercise\"\r\n          propsData={[toDoExercise, inProgressExercise, doneExercise]}\r\n        />\r\n      ) : null}\r\n      <Card\r\n        sx={{\r\n          p: 2,\r\n          mt: 2,\r\n          mr: 2,\r\n          ml: \"auto\",\r\n          display: \"block\",\r\n          alignSelf: \"flex-start\",\r\n        }}\r\n      >\r\n        <Typography variant=\"h6\" pb={2}>\r\n          Personal data\r\n        </Typography>\r\n        {currentUser\r\n          ? Object.entries(currentUser).map(([key, value]) =>\r\n              renderTextField(key, value)\r\n            )\r\n          : null}\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","import { RootState } from \"../../../store\";\r\n\r\nexport const trainingListSelector = (state: RootState) =>\r\n  state.training.trainingList;\r\n\r\nexport const chosenTrainingSelector = (state: RootState) =>\r\n  state.training.chosenTraining;\r\n\r\nexport const nextTrainingIdSelector = (state: RootState) =>\r\n  state.training.nextId;\r\n\r\nexport const dayTrainingListSelector = (state: RootState) =>\r\n  state.training.dayTrainingList;\r\n","import { ITheme } from \"./mainTheme\";\r\n\r\n// breakpoints\r\nexport const downMd = ({ theme }: ITheme) => theme.breakpoints.down(\"md\");\r\n\r\n// colors\r\nexport const primaryMain = ({ theme }: ITheme) => theme.palette.primary.main;\r\nexport const primaryLight = ({ theme }: ITheme) => theme.palette.primary.light;\r\nexport const primaryText = ({ theme }: ITheme) => theme.palette.primary.text;\r\nexport const primaryBackground = ({ theme }: ITheme) =>\r\n  theme.palette.primary.backgroundColor;\r\nexport const secondaryMain = ({ theme }: ITheme) =>\r\n  theme.palette.secondary.main;\r\nexport const errorMain = ({ theme }: ITheme) => theme.palette.error.main;\r\nexport const secondaryText = ({ theme }: ITheme) =>\r\n  theme.palette.secondary.text;\r\nexport const successLight = ({ theme }: ITheme) => theme.palette.success.light;\r\n"],"names":["exerciseListSelector","state","exercise","exerciseList","chosenExerciseSelector","chosenExercise","nextExerciseIdSelector","nextId","trainingExerciseListSelector","trainingExerciseList","ChartJS","ArcElement","Tooltip","Legend","_ref","label","propsData","data","labels","ActivityStatus","datasets","backgroundColor","errorMain","theme","primaryLight","_jsxs","Box","width","height","p","m","children","_jsx","Typography","variant","pb","Pie","useAppSelector","trainingList","trainingListSelector","dispatch","useAppDispatch","isInitialLoading","useRef","_useState","useState","_useState2","_slicedToArray","currentUser","setCurrentUser","useEffect","current","getAllTraining","getAllExercise","userFromLS","window","localStorage","getItem","JSON","parse","_useMemo","useMemo","result","toDoExercise","inProgressExercise","doneExercise","forEach","status","_useMemo2","toDoTraining","inProgressTraining","doneTraining","training","_Fragment","ChartPie","Card","sx","mt","mr","ml","display","alignSelf","Object","entries","map","_ref2","value","TextField","mb","size","disabled","renderTextField","chosenTrainingSelector","chosenTraining","nextTrainingIdSelector","dayTrainingListSelector","dayTrainingList","primaryMain","palette","primary","main","_ref3","light","primaryBackground","_ref5","_ref7","error"],"sourceRoot":""}